# 开发环境的 compose 文件，merge into docker-compose.yml 文件
version: "3"
services:
  nginx:
    # 生产环境下对外映射 3008 端口了，docker-compose.yml 中默认为 3000
    ports:
      - "3008:80"

  node-app:
    depoly: # docker swarm 也就是容器集群相关，会被 docker-compose up | run 忽略；https://docs.docker.com/compose/compose-file/compose-file-v3/#deploy
      replicas: 8 # 容器副本数量
      restart_policy:
        condition: any
      update_config: # 容器更新重启规则；https://docs.docker.com/compose/compose-file/compose-file-v3/#update_config
        parallelism: 2 # 容器同时重启的数量
        delay: 15s # 容器(组)重启的间隔

    build:
      context: .
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
      # （不推荐，逐个变量添加繁琐）以下通过在生产服务器 export MONGO_USER=”yangyong“ 设置 env，读取机器中 env。你可以在服务器通过 printenv 查看。
      # （推荐）在生产服务器 /root 下新建 .env 文件加入你定义的变量（就像该仓库的根目录的.env），修改服务器 .profile或/etc/profile 文件，加入 set -o allexport; source /root/.env; sset +o allexport 这样就会通过文件来设置 env，读取机器中 env。你可以在服务器通过 printenv 查看。
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
    command: node index.js

  mongo:
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}